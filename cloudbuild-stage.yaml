steps:
  # Build the React app for staging
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['install']
  
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'build']
    env:
      - 'VITE_ENVIRONMENT=staging'
      - 'VITE_API_URL=https://us-central1-cnidaria-stage.cloudfunctions.net/cnidaria-api-stage'
  
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/cnidaria-admin-curves-stage:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/cnidaria-admin-curves-stage:latest',
      '.'
    ]
  
  # Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/cnidaria-admin-curves-stage:latest']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'cnidaria-admin-curves-stage',
      '--image', 'gcr.io/$PROJECT_ID/cnidaria-admin-curves-stage:latest',
      '--platform', 'managed',
      '--region', 'us-central1',
      '--allow-unauthenticated',
      '--set-env-vars', 'VITE_ENVIRONMENT=staging,VITE_API_URL=https://us-central1-cnidaria-stage.cloudfunctions.net/cnidaria-api-stage'
    ]
  
  # Ensure public access
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'services', 'add-iam-policy-binding', 'cnidaria-admin-curves-stage',
      '--region', 'us-central1',
      '--member', 'allUsers',
      '--role', 'roles/run.invoker'
    ]

images:
  - 'gcr.io/$PROJECT_ID/cnidaria-admin-curves-stage:latest'

options:
  machineType: 'E2_HIGHCPU_8'
